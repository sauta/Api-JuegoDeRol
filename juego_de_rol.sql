-- Active: 1726787077328@@127.0.0.1@3306@api_web_juego_de_rol
CREATE TABLE ELEMENTOS (
  ID_ELEMENTO INT AUTO_INCREMENT ,
  ELEMENTO VARCHAR(100) NOT NULL COMMENT 'NORMAL Y ELEMENTOS  MAGICOS AIRE, FUEGO, TIERRA, AGUA, MADERA, VENENO, HIELO, ILUSION, CRISTAL, METAL, LUZ, ELECTRICIDAD y CURACION',
  ID_ELEMENTO_DEBIL INT COMMENT 'ELEMENTO QUE CONTRARRESTA EL PODER DE DAÑO MAGICO EN CASO DE HECHIZOS DEFENCIBOS VS DE ATAQUE',
  ID_ELEMENTO_FUERTE INT COMMENT 'ELEMENTO QUE NO LE AFECTA EL PODER DE DAÑO MAGICO EN CASO DE HECHIZOS DEFENCIBOS VS DE ATAQUE',
  DESCRIPCION VARCHAR(100),
  CONSTRAINT ELEMENTOS_PK PRIMARY KEY (ID_ELEMENTO)
);

-- Tabla que contiene los materiales que existen en el juego
CREATE TABLE MATERIALES (
  ID_MATERIAL INT AUTO_INCREMENT COMMENT 'Identificador único para los materiales', 
  MATERIAL VARCHAR(100) DEFAULT 'Aire' NOT NULL COMMENT 'Nombre del material. Ej: Metal, Acero Valirio, Bronce, Bronce Celestial, Oro Imper',
  ID_MATERIAL_DEBIL INT DEFAULT 0 NOT NULL COMMENT 'Material que contrarresta el poder de daño en caso de armas o armaduras defensivas vs de ataque',
  ID_MATERIAL_FUERTE INT DEFAULT 0 NOT NULL COMMENT 'Material que es resistente y contrarresta el poder de daño en caso de armas o armaduras defensivas vs de ataque',
  ID_ELEMENTO_DEBIL INT DEFAULT 0 COMMENT 'Elemento que debilita el material en caso de hechizos defensivos vs de ataque',
  ID_ELEMENTO_FUERTE INT DEFAULT 0 COMMENT 'Elemento que refuerza el material, no afectado por el daño mágico en caso de hechizos defensivos vs de ataque',
  DESCRIPCION VARCHAR(100) COMMENT 'Descripción adicional o histórica del material',
  CONSTRAINT MATERIALES_PK PRIMARY KEY (ID_MATERIAL)
);

CREATE TABLE OBJETOS (
  ID_OBJETO VARCHAR(50) COMMENT 'Identificador único para el objeto',
  NOMBRE_OBJETO VARCHAR(1000) DEFAULT 'Manos' NOT NULL COMMENT 'Nombre del objeto. Ej: Espada, Mochila, Armadura',
  PRECIO INT DEFAULT 0 NOT NULL COMMENT 'Precio del objeto en monedas de oro',
  PESO INT DEFAULT 0 NOT NULL COMMENT 'Peso del objeto en gramos',
  TIPO_OBJETO VARCHAR(300) NOT NULL COMMENT 'Tipo de objeto. Ej: Arma, Mochila, Armadura, Libro, Misión, Mapa, Poción',
  ID_MATERIAL INT NOT NULL COMMENT 'Material principal con el que está construido el objeto',
  CONSTRAINT OBJETOS_PK PRIMARY KEY (ID_OBJETO),
  CONSTRAINT MATERIALES_FK FOREIGN KEY (ID_MATERIAL) REFERENCES MATERIALES (ID_MATERIAL) 
) COMMENT 'Tabla que contiene los objetos en el juego
Los objetos pueden ser vendidos y añadidos a un inventario, almacén, mochila o bodega
Si el inventario está lleno, no se puede agregar el objeto';
 
CREATE TABLE MAPAS (
  ID_MAPA INT AUTO_INCREMENT COMMENT 'Identificador único para el mapa',
  ID_OBJETO VARCHAR(50) COMMENT 'Referencia al objeto que es el mapa en el inventario',
  MAPA VARCHAR(100) NOT NULL COMMENT 'Nombre del mapa o lugar en el mundo del juego',
  HISTORIA_DEL_MUNDO VARCHAR(2000) DEFAULT 'No hay Historia' NOT NULL COMMENT 'Historia o contexto del mundo representado por el mapa',
  CONSTRAINT MAPAS_PK PRIMARY KEY (ID_MAPA),
  CONSTRAINT OBJETOS_FK_1 FOREIGN KEY (ID_OBJETO) REFERENCES OBJETOS (ID_OBJETO) 
) COMMENT 'Tabla que define los mapas del mundo del juego
 Los mapas pueden ser almacenados como objetos en el inventario, almacén, mochila o bodega
 Los mapas incluyen la historia del mundo donde se desarrolla el juego';
CREATE TABLE PAISES (
  ID_PAIS INT AUTO_INCREMENT ,
  ID_REY INT,
  PAIS VARCHAR(100) NOT NULL,
  HIMNO_NACIONAL VARCHAR(2000) NOT NULL,
  ID_MAPA INT,
  CONSTRAINT PAIS_PK PRIMARY KEY (ID_PAIS),
  CONSTRAINT MAPAS_FK FOREIGN KEY (ID_MAPA) REFERENCES MAPAS (ID_MAPA) 
);

CREATE TABLE REGIONES (
  ID_REGION INT AUTO_INCREMENT ,
  REGION VARCHAR(100) NOT NULL,
  CAPITAL_REGION INT COMMENT 'ID_CIUDAD',
  ID_PAIS INT NOT NULL,
  CONSTRAINT REGIONES_PK PRIMARY KEY (ID_REGION),
  CONSTRAINT PAIS_FK FOREIGN KEY (ID_PAIS) REFERENCES PAISES (ID_PAIS) 
);

CREATE TABLE PROVINCIAS (
  ID_PROVINCIA INT AUTO_INCREMENT ,
  PROVINCIA VARCHAR(100) NOT NULL,
  CAPITAL_PROVINCIA INT COMMENT 'ID_CIUDAD',
  ID_REGION INT NOT NULL,
  CONSTRAINT PROVINCIAS_PK PRIMARY KEY (ID_PROVINCIA),
  CONSTRAINT REGION_FK FOREIGN KEY (ID_REGION) REFERENCES REGIONES (ID_REGION) 
);

CREATE TABLE TERRENOS (
  ID_TERRENO INT AUTO_INCREMENT ,
  TERRENO VARCHAR(100) NOT NULL COMMENT 'CIELO, MAR, LAGO, CIUDAD, MONTAÑA',
  DESCRIPCION VARCHAR(100) DEFAULT '',
  CONSTRAINT TERRENOS_PK PRIMARY KEY (ID_TERRENO)
);

CREATE TABLE CIUDADES_O_COMUNAS (
  ID_CIUDAD INT AUTO_INCREMENT ,
  COMUNA_CIUDAD VARCHAR(100) NOT NULL,
  ID_ALCALDE INT COMMENT 'ID PERSONAJE QUE ES ALCALDE',
  ID_PROVINCIA INT NOT NULL,
  ID_TERRENO INT NOT NULL,
  CONSTRAINT CIUDAD_PK PRIMARY KEY (ID_CIUDAD),
  CONSTRAINT PROVINCIA_FK FOREIGN KEY (ID_PROVINCIA) REFERENCES PROVINCIAS (ID_PROVINCIA) ,
  CONSTRAINT TERRENO_FK_1 FOREIGN KEY (ID_TERRENO) REFERENCES TERRENOS (ID_TERRENO) 
);

CREATE TABLE TIPOS_DE_TRANSPORTE (
  ID_TIPO_TRANSPORTE INT AUTO_INCREMENT NOT NULL,
  TIPO VARCHAR(100) NOT NULL COMMENT 'VOLADOR, TERRESTRE, NAVEGANTE',
  DESCRIPCION VARCHAR(100),
  CONSTRAINT TIPO_TRANSPORTE_PK PRIMARY KEY (ID_TIPO_TRANSPORTE)
);

CREATE TABLE TIPO_TRANSPORTE_TERRENO (
  ID_TIPO_TRANSPORTE INT NOT NULL COMMENT 'VOLADOR, TERRESTRE, NAVEGANTE',
  ID_TERRENO INT NOT NULL COMMENT 'CIELO, MAR, LAGO, CIUDAD, MONTAÑA',
  CONSTRAINT TIPO_TRANSPORTE_FK_1 FOREIGN KEY (ID_TIPO_TRANSPORTE) REFERENCES TIPOS_DE_TRANSPORTE (ID_TIPO_TRANSPORTE) ,
  CONSTRAINT TERRENO_FK_2 FOREIGN KEY (ID_TERRENO) REFERENCES TERRENOS (ID_TERRENO) 
);
CREATE TABLE UBICACIONES (
  ID_UBICACION INT AUTO_INCREMENT,
  CALLE VARCHAR(200) NOT NULL,
  NUMERO INT NOT NULL,
  POSTAL INT,
  ID_CIUDAD INT NOT NULL,
  REFERENCIA VARCHAR(100),
  DESCRIPCION_TERRENO VARCHAR(500) DEFAULT '' NOT NULL,
  COORDENADAS_X DECIMAL(10, 8) DEFAULT -33.45960780986384,
  COORDENADAS_Y DECIMAL(10, 8) DEFAULT -70.65438954332191,
  CONSTRAINT UBICACIONES_PK PRIMARY KEY (ID_UBICACION),
  CONSTRAINT CIUDAD_FK FOREIGN KEY (ID_CIUDAD) REFERENCES CIUDADES_O_COMUNAS (ID_CIUDAD) 
);

CREATE TABLE TRANSPORTES (
  ID_TRANSPORTE INT AUTO_INCREMENT,
  ID_OBJETO VARCHAR(50) NOT NULL,
  NOMBRE VARCHAR(100) NOT NULL,
  VELOCIDAD INT DEFAULT 0 NOT NULL,
  CAPACIDAD_ALMACEN INT DEFAULT 1 NOT NULL,
  DESCRIPCION VARCHAR(100),
  ID_TIPO_TRANSPORTE INT,
  ID_UBICACION INT,
  CONSTRAINT TRANSPORTE_PK PRIMARY KEY (ID_TRANSPORTE),
  CONSTRAINT OBJETOS_FK_2 FOREIGN KEY (ID_OBJETO) REFERENCES OBJETOS (ID_OBJETO) ,
  CONSTRAINT UBICACIONES_FK_1 FOREIGN KEY (ID_UBICACION) REFERENCES UBICACIONES (ID_UBICACION) ,
  CONSTRAINT TIPO_TRANSPORTE_FK_2 FOREIGN KEY (ID_TIPO_TRANSPORTE) REFERENCES TIPOS_DE_TRANSPORTE (ID_TIPO_TRANSPORTE) 
);



CREATE TABLE HOGARES (
  ID_HOGAR INT  AUTO_INCREMENT NOT NULL,
  ID_PROPIETARIO INT COMMENT 'ID DEL PRIMER PJ QUE NACIÓ AQUÍ',
  CAPACIDAD_BODEGAJATE INT NOT NULL,
  DESCRIPCION VARCHAR(500) DEFAULT 'Mi dulce hogar...' NOT NULL,
  ID_UBICACION INT NOT NULL  COMMENT ' DESDE ESTA UBICACIÓN EN UN RADIO A DEFINIR, EL PJ OBTIENE ESTAS BONIFICACIONES',
  BONIFICACION_VIDA INT DEFAULT 10 NOT NULL,
  BONIFICACION_MANA INT DEFAULT 10 NOT NULL,
  BONIFICACION_FUERZA INT DEFAULT 10 NOT NULL,
  BONIFICACION_INTELIGENCIA INT DEFAULT 10 NOT NULL,
  BONIFICACION_DESTREZA INT DEFAULT 10 NOT NULL,
  BONIFICACION_ARMADURA INT DEFAULT 10 NOT NULL,
  BONIFICACION_DANO INT DEFAULT 10 NOT NULL,
  BONIFICACION_DANO_MAGICO INT DEFAULT 10 NOT NULL,
  BONIFICACION_ALCANCE INT DEFAULT 10 NOT NULL,
  CONSTRAINT PK_HOGAR PRIMARY KEY (ID_HOGAR),
  CONSTRAINT UBICACIONES_FK_2 FOREIGN KEY (ID_UBICACION) REFERENCES UBICACIONES (ID_UBICACION) 
);



CREATE TABLE CASAS (
  ID_CASA INT AUTO_INCREMENT NOT NULL,
  ID_LIDER INT,
  DESCRIPCION VARCHAR(500) NOT NULL,
  ESCUDO_DE_ARMAS VARCHAR(500) NOT NULL,
  LEMA VARCHAR(500) NOT NULL,
  ID_UBICACION INT NOT NULL,
  CONSTRAINT CASAS_PK PRIMARY KEY (ID_CASA),
  CONSTRAINT UBICACIONES_FK_3 FOREIGN KEY (ID_UBICACION) REFERENCES UBICACIONES (ID_UBICACION) 
);



CREATE TABLE TIPO_DE_ARMAS (
  ID_TIPO_ARMA INT AUTO_INCREMENT,
  TIPO_DE_ARMA VARCHAR(100) NOT NULL,
  DESCRIPCION VARCHAR(100) NOT NULL,
  CONSTRAINT TIPO_ARMAS_PK PRIMARY KEY (ID_TIPO_ARMA)
);

CREATE TABLE TIPOS_DE_HECHIZOS (
  ID_TIPO_HECHIZO INT AUTO_INCREMENT,
  TIPOS_DE_HECHIZO VARCHAR(100) NOT NULL,
  DESCRIPCION VARCHAR(100),
  ID_ELEMENTO INT NOT NULL,
  CONSTRAINT TIPO_HECHIZO_PK PRIMARY KEY (ID_TIPO_HECHIZO),
  CONSTRAINT ELEMENTOS_FK FOREIGN KEY (ID_ELEMENTO) REFERENCES ELEMENTOS (ID_ELEMENTO) 
);

CREATE TABLE HECHIZOS (
  ID_HECHIZO INT AUTO_INCREMENT,
  NOMBRE_HECHIZO VARCHAR(100) NOT NULL,
  VELOCIDAD_DE_HECHIZO INT DEFAULT 0 NOT NULL,
  DANO_MAGICO INT DEFAULT 0 NOT NULL,
  ALCANCE INT DEFAULT 0 NOT NULL,
  COSTO_MANA INT DEFAULT 0 NOT NULL COMMENT 'AL UILIZAR ESTE HECHIZO SE RESTA EL MANÁ',
  ID_TIPO_HECHIZO INT NOT NULL,
  CONSTRAINT HECHIZO_PK PRIMARY KEY (ID_HECHIZO),
  CONSTRAINT TIPOS_DE_HECHIZOS_FK FOREIGN KEY (ID_TIPO_HECHIZO) REFERENCES TIPOS_DE_HECHIZOS (ID_TIPO_HECHIZO) 
) COMMENT 'LOS HECHIZOS SE APRENDEN LEYENDO LIBROS, TAMBIEN SE TIENE EN CUENTA EL NIVEL Y LA CLASE Y RAZA.';

CREATE TABLE LIBROS (
  ID_LIBRO INT AUTO_INCREMENT,
  ID_OBJETO VARCHAR(50),
  TITULO VARCHAR(100) DEFAULT '' NOT NULL,
  HISTORIA VARCHAR(2000) DEFAULT '' NOT NULL,
  AUTOR VARCHAR(100) DEFAULT 'ANONIMO' NOT NULL COMMENT 'ID DE ALGUN PERSONAJE',
  ID_AUTOR INT COMMENT 'ID DE ALGUN PERSONAJE',
  CONSTRAINT LIBRO_PK PRIMARY KEY (ID_LIBRO),
  CONSTRAINT OBJETOS_FK_3 FOREIGN KEY (ID_OBJETO) REFERENCES OBJETOS (ID_OBJETO) 
) COMMENT 'LOS LIBROS SON OBJETOS QUE SE PUEDEN LLEVAR EN EL INVENTARIO, CONTIENEN HECHIZOS Y UNA HISTORIA QUE EXPLICA COMO REALIZAR EL HECHIZO';

CREATE TABLE HECHIZOS_ENEL_LIBRO (
  ID_HECHIZO_ENEL_LIBRO  INT AUTO_INCREMENT,
  ID_LIBRO INT NOT NULL,
  ID_HECHIZO INT NOT NULL,
  NIVEL_REQUERIDO INT DEFAULT 0 NOT NULL,
  CONSTRAINT HECHIZOS_ENEL_LIBRO_PK PRIMARY KEY (ID_HECHIZO_ENEL_LIBRO),
  CONSTRAINT LIBROS_FK_1 FOREIGN KEY (ID_LIBRO) REFERENCES LIBROS (ID_LIBRO) ,
  CONSTRAINT HECHIZOS_FK_1 FOREIGN KEY (ID_HECHIZO) REFERENCES HECHIZOS (ID_HECHIZO) 
) COMMENT 'EL LIBRO CONTIENE MUCHOS HECHIZOS Y ABRIA QUE LEERLO DE NUEVO SI SUBES DE NIVEL PARA APRENDER UN NUEVO HECHIZO DEL LIRBO
AL MOMENTO DE LEER EL LIBRO ESTE DEBE DE TENER DENTRO DE SU HISTORIA PALABRAS CLAVES PARA REEMPLAZARLAS CON EL NOMBRE DEL HECHIZO,
SI EL LECTOR LO INTENTA LEER Y NO CUMPLE CON EL NIVEL REQUERIDO, EL LECTOR NO PODRÁ LEER EL NOMBRE DEL HECHIZO POR LO TANTO NO PODRÁ APRENDERLO
SI EL LECTOR SUBE AL NIVEL NECESARIO PARA ENTENDER EL NOMBRE DEL HECHIZO, EL LECTOR PODRA APRENDER EL HECHIZO QUE NO PUDO APRENDER ANTERIORMENTE
NO SE PUEDE APRENDER DOS VECES EL MISMO HECHIZO';
CREATE TABLE ARMAS (
  ID_ARMA INT AUTO_INCREMENT NOT NULL,
  NOMBRE_ARMA VARCHAR(100) DEFAULT 'PUÑOS' NOT NULL,
  DANO INT DEFAULT 1 NOT NULL,
  ID_ARMA_CONSUMIBLE INT,
  CARGA INT COMMENT ' LAS CARGAS DEL ARMA ES SOLO PARA LAS ARMAS DE TIPO LARGO ALCANCE O LANZA HECHIZO',
  NIVEL_REQUERIDO INT COMMENT ' NIVEL REQUERIDO DEL JUGADOR PARA PORTAR EL ARMA',
  ALCANCE INT DEFAULT 0 NOT NULL COMMENT ' DISTANCIA QUE ATACA EL ARMA',
  VELOCIDAD_DE_ATAQUE INT DEFAULT 0 NOT NULL COMMENT 'TURNOS O TIEMPO QUE EL ARMA SE DEMORA EN ATACAR',
  ID_TIPO_ARMA INT NOT NULL COMMENT ' TIPO DE ARMA',
  ID_OBJETO VARCHAR(50) COMMENT ' ID DEL OBJETO DEL ARMA',
  BONIFICACION_VIDA INT DEFAULT 0 NOT NULL COMMENT ' hay armas que dan bonificación de vida',
  BONIFICACION_MANA INT DEFAULT 0 NOT NULL COMMENT ' las armas tipo baston magico dan bonificación de mana',
  BONIFICACION_FUERZA INT DEFAULT 0 NOT NULL COMMENT ' las armas de la clase guerrero dan bonificación de fuerza',
  BONIFICACION_DANO INT DEFAULT 0 NOT NULL COMMENT ' las armas tipo mazo dan bonificación de daño pero son mas lentas',
  BONIFICACION_DANO_MAGICO INT DEFAULT 0 NOT NULL COMMENT ' las armas tipo baston magico dan bonificación de daño magico',
  CONSTRAINT ARMAS_PK PRIMARY KEY (ID_ARMA),
  CONSTRAINT TIPO_ARMAS_FK_1 FOREIGN KEY (ID_TIPO_ARMA) REFERENCES TIPO_DE_ARMAS (ID_TIPO_ARMA) ,
  CONSTRAINT OBJETOS_FK_4 FOREIGN KEY (ID_OBJETO) REFERENCES OBJETOS (ID_OBJETO) 
) COMMENT 'EL ARMA REALIZA DAÑO FISICO, Y SI ESTA CONTRUIDO CON ALGUN MATERIAL QUE SEA FUERTE CONTRA UN ELEMENTO, EL DAÑO SE CONVIERTE TAMBIEN EN DAÑO MAGICO
LAS ARMAS DE ALCANCE UTILIZAN ARMAS TIPO ARROJADISAS
LAS ARMAS TIPO CUERPO A CUERTPO PUEDEN PENETRAR LA DEFENSA, DESPRECIANDO UN PORCENTAJE DE LA DEFENSA, PERO NUNCA SERA 0';
CREATE TABLE ARMADURAS (
  ID_ARMADURA INT AUTO_INCREMENT NOT NULL,
  NOMBRE_ARMADURA VARCHAR(100) NOT NULL,
  ID_TIPO_ARMA INT NOT NULL COMMENT  'EL TIPO DE ARMADURA ESTA EN TIPO DE ARMA, YA QUE PUEDE SER TIPO ARMADURA MAGICA, O ARMADURA FISICA, TAMBIEN PUEDE HABER ARMADURA CONTRA ALGUNAS CLASES EN ESPECIFICOS COMO ARMADURA DE DRAGON.',
  ID_OBJETO VARCHAR(50) COMMENT 'ID DEL OBETO ARMADURA',
  NIVEL_REQUERIDO INT COMMENT 'NIVEL REQUERIDO PARA UTILIZAR LA ARMADURA',
  DEFENSA INT DEFAULT 0 NOT NULL,
  DEFENSA_MAGICA INT DEFAULT 0 NOT NULL,
  BONIFICACION_VIDA INT DEFAULT 0 NOT NULL,
  BONIFICACION_MANA INT DEFAULT 0 NOT NULL,
  BONIFICACION_DEFENSA INT DEFAULT 0 NOT NULL,
  BONIFICACION_DEFENSA_MAGICA INT DEFAULT 0 NOT NULL,
  CONSTRAINT ARMADURAS_PK PRIMARY KEY (ID_ARMADURA),
  CONSTRAINT TIPO_ARMAS_FK_2 FOREIGN KEY (ID_TIPO_ARMA) REFERENCES TIPO_DE_ARMAS (ID_TIPO_ARMA) ,
  CONSTRAINT OBJETOS_FK_5 FOREIGN KEY (ID_OBJETO) REFERENCES OBJETOS (ID_OBJETO) 
) COMMENT 'OBJETO QUE SE EQUIPA EL PERSONAJE, ESTE TIENE ZAPATOS, PECHERA PANTALONES Y CASCOS INCLUIDOS
EVITA QUE EL PJ RESIVA DAÑO FISICO Y DAÑO MAGICO
SI EL PJ TIENE MAS ARMADURA QUE EL ATAQUE DEL HECHIZO O ARMA, EL DAÑO AL PJ ES 0
SI EL PJ RESIBE MAS DAÑO FISICO/MAGICO QUE LA DEFENSA FISICA/MAGICA EL PJ RESIVE DAÑO A LOS PUNTOS DE VIDA';
CREATE TABLE POSIONES (
  ID_POSION INT AUTO_INCREMENT NOT NULL,
  ID_OBJETO VARCHAR(50),
  NOMBRE_POSION VARCHAR(100) DEFAULT 'Posión Eterea' NOT NULL,
  NIVEL_REQUERIDO INT,
  REGENERA_MANA INT DEFAULT 0 NOT NULL,
  REGENERA_VIDA INT DEFAULT 0 NOT NULL,
  CONSTRAINT POSIONES_PK PRIMARY KEY (ID_POSION),
  CONSTRAINT OBJETOS_FK_6 FOREIGN KEY (ID_OBJETO) REFERENCES OBJETOS (ID_OBJETO) 
) COMMENT 'POR AHORA SOLO ABRAN POCIONES DE MANÁ Y DE VIDA, PARA NO COMPLCIAR LAS COALESCE_SQ';

CREATE TABLE CLASES (
  ID_CLASE INT AUTO_INCREMENT NOT NULL,
  NOMBRE_CLASE VARCHAR(100) NOT NULL,
  BONIFICACION_VIDA INT DEFAULT 0 NOT NULL,
  BONIFICACION_MANA INT DEFAULT 0 NOT NULL,
  BONIFICACION_FUERZA INT DEFAULT 0 NOT NULL,
  BONIFICACION_INTELIGENCIA INT DEFAULT 0 NOT NULL,
  BONIFICACION_DESTREZA INT DEFAULT 0 NOT NULL,
  BONIFICACION_ARMADURA INT DEFAULT 0 NOT NULL,
  BONIFICACION_DANO INT DEFAULT 0 NOT NULL,
  BONIFICACION_DANO_MAGICO INT DEFAULT 0 NOT NULL,
  BONIFICACION_ALCANCE INT DEFAULT 0 NOT NULL,
  BONIFICACION_PESO INT DEFAULT 0 NOT NULL,
  BONIFICACION_PRECIO INT DEFAULT 0 NOT NULL,
  CONSTRAINT CLASES_PK PRIMARY KEY (ID_CLASE)
) COMMENT 'clases para realizar trabajo y misiones en el mundo, tambien se asignan las clases a las razas que puedan realiar esos trabajos';
CREATE TABLE RAZAS (
  ID_RAZA INT AUTO_INCREMENT NOT NULL,
  NOMBRE_RAZA VARCHAR(100) NOT NULL,
  BONIFICACION_VIDA INT DEFAULT 0 NOT NULL,
  BONIFICACION_MANA INT DEFAULT 0 NOT NULL,
  BONIFICACION_FUERZA INT DEFAULT 0 NOT NULL,
  BONIFICACION_INTELIGENCIA INT DEFAULT 0 NOT NULL,
  BONIFICACION_DESTREZA INT DEFAULT 0 NOT NULL,
  BONIFICACION_ARMADURA INT DEFAULT 0 NOT NULL,
  BONIFICACION_DANO INT DEFAULT 0 NOT NULL,
  BONIFICACION_DANO_MAGICO INT DEFAULT 0 NOT NULL,
  BONIFICACION_ALCANCE INT DEFAULT 0 NOT NULL,
  BONIFICACION_PESO INT DEFAULT 0 NOT NULL,
  BONIFICACION_PRECIO INT DEFAULT 0 NOT NULL,
  CONSTRAINT RAZAS_PK PRIMARY KEY (ID_RAZA)
) COMMENT 'Razas que existen en el mundo, esta razas pueden tener algunas clases espeificas y ciertas bonificaciones de vida mana y otros';

CREATE TABLE COMPATIBILIDADES (
  ID_COMPATIBILIDAD INT AUTO_INCREMENT NOT NULL,
  ID_CLASE INT NOT NULL,
  ID_RAZA INT NOT NULL,
  CONSTRAINT COMPATIBILIDADES_PK PRIMARY KEY (ID_COMPATIBILIDAD) ,
  CONSTRAINT CLASE_FK FOREIGN KEY (ID_CLASE) REFERENCES CLASES (ID_CLASE) ,
  CONSTRAINT RAZAS_FK FOREIGN KEY (ID_RAZA) REFERENCES RAZAS (ID_RAZA) 
) COMMENT 'tabla de compatibilidades para las clases y razasa, la gracias de esta tabla es que se puede utilizar para las armas armaduras y otros objetos para que no todas la razas o clases puedan utilizar las mismas combinaciones de armas';

CREATE TABLE ARMA_USABLE_POR (
  ID_COMPATIBILIDAD INT NOT NULL,
  ID_TIPO_ARMA INT,
  CONSTRAINT TIPO_ARMAS_FK_3 FOREIGN KEY (ID_TIPO_ARMA) REFERENCES TIPO_DE_ARMAS (ID_TIPO_ARMA) ,
  CONSTRAINT COMPATIBILIDADES_FK_1 FOREIGN KEY (ID_COMPATIBILIDAD) REFERENCES COMPATIBILIDADES (ID_COMPATIBILIDAD) 
);

CREATE TABLE HECHIZO_USABLE_POR (
  ID_COMPATIBILIDAD INT NOT NULL,
  ID_TIPO_HECHIZO INT,
  CONSTRAINT TIPO_HECHIZOS_FK FOREIGN KEY (ID_TIPO_HECHIZO) REFERENCES TIPOS_DE_HECHIZOS (ID_TIPO_HECHIZO) ,
  CONSTRAINT COMPATIBILIDADES_FK_2 FOREIGN KEY (ID_COMPATIBILIDAD) REFERENCES COMPATIBILIDADES (ID_COMPATIBILIDAD) 
);

CREATE TABLE SEXOS (
  ID_SEXO INT AUTO_INCREMENT NOT NULL,
  SEXO VARCHAR(100) NOT NULL,
  CONSTRAINT SEXOS_PK PRIMARY KEY (ID_SEXO)
);

CREATE TABLE NIVELES (
  ID_NIVEL INT AUTO_INCREMENT NOT NULL,
  NIVEL VARCHAR(100) NOT NULL,
  EXPERIENCIA_REQUERIDA INT DEFAULT 0 NOT NULL COMMENT 'EXPERIENCIA REQUERIDA PARA PASAR COMPLETAR EL NIVEL',
  DESCRIPCION VARCHAR(100) DEFAULT '' NOT NULL,
  CONSTRAINT ID_NIVEL_PK PRIMARY KEY (ID_NIVEL)
);



CREATE TABLE PERSONAJES (
  ID_PERSONAJE INT  AUTO_INCREMENT,
  NOMBRE VARCHAR(100) DEFAULT 'Sin nombre' NOT NULL,
  NOMBRE_COMPLETO VARCHAR(500) DEFAULT 'Hijo de...' NOT NULL,
  VIDA INT DEFAULT 100 NOT NULL,
  MANA INT DEFAULT 100 NOT NULL,
  VIDA_MAX INT DEFAULT 100 NOT NULL,
  MANA_MAX INT DEFAULT 100 NOT NULL,
  FUERZA INT DEFAULT 1 NOT NULL,
  INTELIGENCIA INT DEFAULT 1 NOT NULL,
  DESTREZA INT DEFAULT 1 NOT NULL,
  EDAD INT DEFAULT 0 NOT NULL,
  EXPERIENCIA INT DEFAULT 0 NOT NULL,
  ORO INT DEFAULT 0 NOT NULL,
  FECHA_NACIMIENTO TIMESTAMP DEFAULT  CURRENT_TIMESTAMP NOT NULL,
  FECHA_POSTMORTE TIMESTAMP,
  ID_CASA INT,
  ID_HOGAR INT,
  ID_UBICACION INT,
  ID_RAZA INT,
  ID_CLASE INT,
  ID_SEXO INT DEFAULT 3 NOT NULL,
  ID_NIVEL INT DEFAULT 1 NOT NULL,
  ID_ARMADURA_EQUIPADA INT DEFAULT 1 NOT NULL,
  ID_ARMA_EQUIPADA INT DEFAULT 0 NOT NULL,
  ID_HECHIZO_EQUIPADO INT DEFAULT 0 NOT NULL,
  ID_PERSONAJE_PADRE INT DEFAULT 0 NOT NULL,
  ID_PERSONAJE_MADRE INT DEFAULT 0 NOT NULL,
  ID_PERSONAJE_PAREJA INT,
  ID_MOCHILA_EQUIPADA INT,
  ID_INVENTARIO_PERSONAJE INT,
  ID_TRANSPORTE INT COMMENT 'SI ES DISTINTO A NULL EL PERSONAJE ESTÁ EN UN TRANSPORTE',
  CONSTRAINT PERSONAJES_PK PRIMARY KEY (ID_PERSONAJE) ,
  CONSTRAINT CASA_PJ_FK FOREIGN KEY (ID_CASA) REFERENCES CASAS (ID_CASA) ,
  CONSTRAINT RAZA_PJ_FK FOREIGN KEY (ID_RAZA) REFERENCES RAZAS (ID_RAZA) ,
  CONSTRAINT SEXO_PJ_FK FOREIGN KEY (ID_SEXO) REFERENCES SEXOS (ID_SEXO) ,
  CONSTRAINT CLASE_PJ_FK FOREIGN KEY (ID_CLASE) REFERENCES CLASES (ID_CLASE) ,
  CONSTRAINT HOGAR_PJ_FK FOREIGN KEY (ID_HOGAR) REFERENCES HOGARES (ID_HOGAR) ,
  CONSTRAINT NIVEL_PJ_FK FOREIGN KEY (ID_NIVEL) REFERENCES NIVELES (ID_NIVEL) ,
  CONSTRAINT ARMA_PJ_FK FOREIGN KEY (ID_ARMA_EQUIPADA) REFERENCES ARMAS (ID_ARMA) ,
  CONSTRAINT UBICACION_PJ_FK FOREIGN KEY (ID_UBICACION) REFERENCES UBICACIONES (ID_UBICACION) ,
  CONSTRAINT TRANSPORTE_PJ_FK FOREIGN KEY (ID_TRANSPORTE) REFERENCES TRANSPORTES (ID_TRANSPORTE) ,
  CONSTRAINT HECHIZO_PJ_FK FOREIGN KEY (ID_HECHIZO_EQUIPADO) REFERENCES HECHIZOS (ID_HECHIZO) ,
  CONSTRAINT ARMADURA_PJ_FK FOREIGN KEY (ID_ARMADURA_EQUIPADA) REFERENCES ARMADURAS (ID_ARMADURA) 
);

CREATE TABLE MISIONES (
  ID_MISION INT AUTO_INCREMENT,
  ID_OBJETO VARCHAR(50) COMMENT 'MISIONES SON EN PAPEL Y PESAN Y TIENE UN PRECIO',
  MISION VARCHAR(300) NOT NULL COMMENT ' TITULO DE LA MISION',
  EXPERIENCIA INT COMMENT ' LA EXPERIENCIA ES REFERENTE, SI ES LA MISMA MISIÓN CON MAYORDIFICULTAD',
  DESCRIPCION VARCHAR(1000) NOT NULL,
  DIFICULTAD INT NOT NULL COMMENT ' LA DIFICULTAD AHUMENTA LA EXPERIENCIA',
  ID_ENEMIGO INT COMMENT 'EL ENEMIGO PUEDE EXISTIR O NO, SI EL ENEMIGO ESTA MUERTO NO SE PUEDE VOLVER A REALIZAR',
  ID_VICTIMA INT COMMENT 'LA VICTIMA PUEDE EXISTIR O NO',
  ID_INICIADOR INT COMMENT 'EL INICIADOR ES QUIEN COMIENZA LA MISIÓN, O LIDER DEL GRUPO',
  ID_UBICACION INT NOT NULL,
  CONSTRAINT MISIONES_PK PRIMARY KEY (ID_MISION),
  CONSTRAINT OBJETOS_FK_7 FOREIGN KEY (ID_OBJETO) REFERENCES OBJETOS (ID_OBJETO) ,
  CONSTRAINT UBICACIONES_FK_4 FOREIGN KEY (ID_UBICACION) REFERENCES UBICACIONES (ID_UBICACION) 
) COMMENT 'SE SUMA LA MISION POR EL PESO DEL OBJETO Y SE DEJA EN INVENTARIO';



CREATE TABLE EQUIPOS (
  ID_EQUIPO INT AUTO_INCREMENT,
  CANTO VARCHAR(1200) DEFAULT '' NOT NULL,
  FECHA_CREACION TIMESTAMP DEFAULT  CURRENT_TIMESTAMP,
  FECHA_DISOLUCION TIMESTAMP,
  ID_LIDER INT,
  CONSTRAINT EQUIPOS_PK PRIMARY KEY (ID_EQUIPO),
  CONSTRAINT PERSONAJES_FK_7 FOREIGN KEY (ID_LIDER) REFERENCES PERSONAJES (ID_PERSONAJE) 
);


CREATE TABLE PERSONAJES_EN_EQUIPO (
  ID_EQUIPO INT AUTO_INCREMENT,
  ID_PERSONAJE INT,
  CONSTRAINT EQUIPOS_FK FOREIGN KEY (ID_EQUIPO) REFERENCES EQUIPOS (ID_EQUIPO) ,
  CONSTRAINT PERSONAJES_FK_6 FOREIGN KEY (ID_PERSONAJE) REFERENCES PERSONAJES (ID_PERSONAJE) 
);

CREATE TABLE INVENTARIOS (
  ID_INVENTARIO INT AUTO_INCREMENT,
  CAPACIDAD_CARGA INT DEFAULT 20 NOT NULL,
  ID_PERSONAJE INT,
  CONSTRAINT INVENTARIOS_PK PRIMARY KEY (ID_INVENTARIO),
  CONSTRAINT PERSONAJES_FK_5 FOREIGN KEY (ID_PERSONAJE) REFERENCES PERSONAJES (ID_PERSONAJE) 
) COMMENT 'EL INVENTARIO ES LA CAPACIDAD DE CARGA DEL PERSONAJE';
CREATE TABLE OBJETOS_EN_INVENTARIOS (
  ID_OBJETO VARCHAR(50),
  ID_INVENTARIO INT,
  CANTIDAD INT DEFAULT 0,
  CONSTRAINT OBJETOS_FK_8 FOREIGN KEY (ID_OBJETO) REFERENCES OBJETOS (ID_OBJETO) ,
  CONSTRAINT INVENTARIOS_FK FOREIGN KEY (ID_INVENTARIO) REFERENCES INVENTARIOS (ID_INVENTARIO) 
) COMMENT 'EL OBJETOS_EN_INVENTARIOS SE MULTIPLICA LA CANTIDAD POR EL PESO DEL OBJETO';
CREATE TABLE MOCHILAS (
  ID_MOCHILA INT AUTO_INCREMENT,
  NOMBRE_MOCHILA VARCHAR(100),
  ID_PERSONAJE INT,
  CAPACIDAD INT DEFAULT 0 NOT NULL,
  ID_OBJETO VARCHAR(50) COMMENT 'LA MOCHILA ES UN OBJETO POR LO QUE TIENE SU ID OBJETO PROPIA, SE PUEDE ALMACENAR SOLO SI NO TIENE OBJETOS',
  CONSTRAINT MOCHILAS_PK PRIMARY KEY (ID_MOCHILA),
  CONSTRAINT OBJETOS_FK_14 FOREIGN KEY (ID_OBJETO) REFERENCES OBJETOS (ID_OBJETO) ,
  CONSTRAINT PERSONAJES_FK_4 FOREIGN KEY (ID_PERSONAJE) REFERENCES PERSONAJES (ID_PERSONAJE) 
) COMMENT 'LA MOCHILA SE SUMA LA CAPACIDAD DE CARGA DEL PERSONAEJE';
CREATE TABLE OBJETOS_EN_MOCHILA (
  ID_OBJETO VARCHAR(50) COMMENT 'AQUÍ VAN LOS OBJETO QUE PUEDEN HABER DENTRO DE LA MOCHILA, ASEGURARSE DE QUE LA MISMA MOCHILA NO PUEDA CONTENER MOCHILAS',
  ID_MOCHILA INT COMMENT 'ID DE LA MOCHILA EN DONDE ESTA ESTE OBJETO',
  CANTIDAD INT DEFAULT 0 COMMENT 'CANTIDAD DE VECES QUE SE REPITE EL OBJETO',
  CONSTRAINT OBJETOS_FK_9 FOREIGN KEY (ID_OBJETO) REFERENCES OBJETOS (ID_OBJETO) ,
  CONSTRAINT MOCHILAS_FK FOREIGN KEY (ID_MOCHILA) REFERENCES MOCHILAS (ID_MOCHILA) 
);

CREATE TABLE BODEGAS (
  ID_BODEGA INT AUTO_INCREMENT,
  ID_HOGAR INT,
  CAPACIDAD INT DEFAULT 0 NOT NULL,
  CONSTRAINT BODEGAS_PK PRIMARY KEY (ID_BODEGA),
  CONSTRAINT HOGARES_FK FOREIGN KEY (ID_HOGAR) REFERENCES HOGARES (ID_HOGAR) 
)COMMENT 'LA BODEGA SE DIVIDE LA CANTIDAD POR EL PESO DEL OBJETO Y SE ELIMINA DEL INVENTARIO 
LA BODEGA SE MULTIPLICA LA CANTIDAD POR EL PESO DEL OBJETO Y SE DEJA EN EL INVENTARIO';

CREATE TABLE OBJETOS_EN_BODEGAS (
  ID_OBJETO VARCHAR(50),
  ID_BODEGA INT,
  CANTIDAD INT DEFAULT 0,
  CONSTRAINT OBJETOS_FK_10 FOREIGN KEY (ID_OBJETO) REFERENCES OBJETOS (ID_OBJETO) ,
  CONSTRAINT BODEGAS_FK FOREIGN KEY (ID_BODEGA) REFERENCES BODEGAS (ID_BODEGA) 
);
CREATE TABLE ALMACENES (
  ID_ALMACEN INT AUTO_INCREMENT,
  CAPACIDAD INT DEFAULT 0 NOT NULL,
  ID_TRANSPORTE INT,
  CONSTRAINT ALMACENES_PK PRIMARY KEY (ID_ALMACEN),
  CONSTRAINT TRANSPORTES_FK FOREIGN KEY (ID_TRANSPORTE) REFERENCES TRANSPORTES (ID_TRANSPORTE) 
) COMMENT 'EL ALMACEN SE DIVIDE LA CANTIDAD POR EL PESO DEL OBJETO Y SE ELIMINA DEL INVENTARIO, EL ALMACEN SE MULTIPLICA LA CANTIDAD POR EL PESO DEL OBJETO Y SE DEJA EN EL INVENTARIO';

CREATE TABLE OBJETOS_EN_ALMACENES (
  ID_OBJETO VARCHAR(50),
  ID_ALMACEN INT,
  CANTIDAD INT DEFAULT 0,
  CONSTRAINT OBJETOS_FK_11 FOREIGN KEY (ID_OBJETO) REFERENCES OBJETOS (ID_OBJETO) ,
  CONSTRAINT ALMACENES_FK FOREIGN KEY (ID_ALMACEN) REFERENCES ALMACENES (ID_ALMACEN) 
);

CREATE TABLE COFRES (
  ID_COFRE INT AUTO_INCREMENT,
  ID_UBICACION INT,
  FECHA_CREACION TIMESTAMP,
  FECHA_SAQUEO TIMESTAMP,
  CONSTRAINT COFRES_PK PRIMARY KEY (ID_COFRE),
  CONSTRAINT UBICACIONES_FK_5 FOREIGN KEY (ID_UBICACION) REFERENCES UBICACIONES (ID_UBICACION) 
) COMMENT 'EL COFRE MULTIPLICA LA CANTIDAD POR EL PESO DEL OBJETO Y SE DEJA EN INVENTARIO';

CREATE TABLE OBJETOS_EN_COFRES (
  ID_OBJETO VARCHAR(50),
  ID_COFRE INT,
  CANTIDAD INT DEFAULT 0,
  CONSTRAINT OBJETOS_FK_12 FOREIGN KEY (ID_OBJETO) REFERENCES OBJETOS (ID_OBJETO) ,
  CONSTRAINT COFRES_FK FOREIGN KEY (ID_COFRE) REFERENCES COFRES (ID_COFRE) 
);


CREATE TABLE BOTINES (
  ID_BOTIN INT AUTO_INCREMENT,
  ID_MISION INT,
  FECHA_SAQUEO TIMESTAMP,
  ESTADO VARCHAR(100) comment 'PARA SABER SI EL BOTÍN ESTA SAQUEADO',
  CONSTRAINT BOTINES_PK PRIMARY KEY (ID_BOTIN),
  CONSTRAINT MISIONES_FK_1 FOREIGN KEY (ID_MISION) REFERENCES MISIONES (ID_MISION) 
) COMMENT 'EL BOTIN SE MULTIPLICA LA CANTIDAD POR EL PESO DEL OBJETO Y SE DEJA EN EL INVENTARIO';

CREATE TABLE OBJETOS_EN_BOTINES (
  ID_OBJETO VARCHAR(50),
  ID_BOTIN INT,
  CANTIDAD INT DEFAULT 0 NOT NULL,
  CONSTRAINT OBJETOS_FK_13 FOREIGN KEY (ID_OBJETO) REFERENCES OBJETOS (ID_OBJETO) ,
  CONSTRAINT BOTINES_FK FOREIGN KEY (ID_BOTIN) REFERENCES BOTINES (ID_BOTIN) 
);
CREATE TABLE CONOCIMIENTO (
  ID_LIBRO INT ,
  ID_HECHIZO INT,
  ID_PERSONAJE INT,
  FECHA_APRENDIZAGE TIMESTAMP DEFAULT  CURRENT_TIMESTAMP,
  CONSTRAINT LIBROS_FK_2 FOREIGN KEY (ID_LIBRO) REFERENCES LIBROS (ID_LIBRO) ,
  CONSTRAINT HECHIZOS_FK_2 FOREIGN KEY (ID_HECHIZO) REFERENCES HECHIZOS (ID_HECHIZO) ,
  CONSTRAINT PERSONAJES_FK_2 FOREIGN KEY (ID_PERSONAJE) REFERENCES PERSONAJES (ID_PERSONAJE) 
) COMMENT 
'EL CONOCIMIENTO SE ADQUIERE AL MOMENTO DE LEER UN LIBRO Y SE REGISTRA EL/LOS HECHIZOS APRENDIDOS SEGUN NIVEL, CLASE Y RAZA
SI EL LIBRO SE LEE DE NUEVO Y EL PERSONAJE YA APRENDIO ALGUNOS HECHIZOS DEL LIBRO, PERO EL PERSONAJE TIENE MAS NIVEL,
SE SUMARÁ A SUS CONOCIMIENTOS LOS HECHIZOS DEL LIRBO QUE NO PODIA ADQUIRIR POR FALTA DE EXPERIENCIA';
CREATE TABLE MISIONES_EN_CURSO (
  ID_MISION INT NOT NULL,
  ID_PERSONAJE INT NOT NULL,
  FECHA_INICIO_MISION TIMESTAMP DEFAULT  CURRENT_TIMESTAMP,
  FECHA_TERMINO_MISION TIMESTAMP,
  CONSTRAINT MISIONES_FK_2 FOREIGN KEY (ID_MISION) REFERENCES MISIONES (ID_MISION) ,
  CONSTRAINT PERSONAJES_FK_1 FOREIGN KEY (ID_PERSONAJE) REFERENCES PERSONAJES (ID_PERSONAJE) 
) COMMENT  'LA MISION EN CURSO SE PUEDE VER QUE PERSONAJES LA ESTAN REALIZANDO AL MISMO TIEMPO Y PUEDEN COLABORAR,
 SI UN PERSONAJE ES TACHADO COMO ENEMIGO, LA MISION NO TERMINARPA HASTA QUE MUERA
 EL PERSONAJE TACHADO COMO ENEMIGO, SE AGREGARA A LA MISIONES_EN_CURSO Y SUS ENEMIGOS SERAN QUIENES INICIARON LA MISIÓN,
 Y SI EL LIDER ESTA ENUN GRUPO ESE GRUPO SERÁ SU ENEMIGO';

